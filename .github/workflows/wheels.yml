---
name: Build normal wheels

on: [push, pull_request]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: psf/black@stable

  cross-build:
    runs-on: ubuntu-latest
    container: robotpy/roborio-cross-ubuntu:2023.1
    strategy:
      matrix:
        
        #
        # Add packages here and in packages.toml!
        #

        package:
        - Cython
        - debugpy
        - numpy
        - ptvsd
        - pydevd
        - pyinstrument
        - PyYAML
        - zope.interface

    steps:
    - uses: actions/checkout@v2

    - shell: bash
      name: Install script requirements
      run: |
        /build/venv/bin/cross-python -m \
          pip --disable-pip-version-check install -r requirements.txt
        /build/venv/bin/build-python -m \
          pip --disable-pip-version-check install -r requirements.txt
    
    - shell: bash
      name: Determine if ${{ matrix.package }} should be built
      id: check
      run: |
        /build/venv/bin/cross-python should_build.py ${{ matrix.package }}
    
    - if: steps.check.outputs.should_build == 'true'
      name: Install extra requirements for ${{ matrix.package }}
      shell: bash
      run: |
        /build/venv/bin/build-python whl_deps.py build ${{ matrix.package }}
        /build/venv/bin/cross-python whl_deps.py cross ${{ matrix.package }}

    - if: steps.check.outputs.should_build == 'true'
      name: Build ${{ matrix.package }} wheel
      id: build
      shell: bash
      run: |
        /build/venv/bin/cross-python whl_build.py ${{ matrix.package }}

    - if: steps.check.outputs.should_build == 'true'
      name: Modify ${{ matrix.package }} wheel
      shell: bash
      run: |
        /build/venv/bin/cross-python whl_mod.py ${{ steps.build.outputs.wheel }}
        ls dist/*

    # Upload package so that users can download the package directly
    # by just issuing a PR
    - uses: actions/upload-artifact@v2
      if: steps.check.outputs.should_build == 'true'
      with:
        name: ${{ matrix.package }}
        path: dist/${{ matrix.package }}*.whl
    
    #
    # Publish wheel to robotpy site
    #

    - uses: robotpy/github-action-scp@atomic
      if: steps.check.outputs.should_build == 'true' && github.event_name == 'push' && github.event.ref == 'refs/heads/2023'
      with:
        local: dist
        remote: public_html/2023/roborio
        host: narya.tortall.net
        username: ${{ secrets.SSH_USER }}
        privateKey: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        atomicPut: true

